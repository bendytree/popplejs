{
  "name": "stringsmash",
  "version": "0.1.1",
  "description": "Compresses a string so that it can be embedded as a variable in JavaScript.",
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/bendytree/stringsmash.git"
  },
  "keywords": [
    "string",
    "smash",
    "compress",
    "compression"
  ],
  "devDependencies": {},
  "author": {
    "name": "Josh Wright",
    "email": "josh@bendytree.com",
    "url": "http://bendytree.com"
  },
  "scripts": {},
  "license": "MIT/X11",
  "readme": "\n# String Smash\n\nWhat it does: Compresses a string so that it can be embedded as a variable in JavaScript.\n\nSometimes you need to embed really long strings in JavaScript. Ok, rarely. But say\nyou embed some css in JavaScript and the strings repeat a lot. What if you could\nuse JavaScript variables to reduce the repitition? You could save KB in downloads.\nThis is a quick proof of concept.\n\n## Before:\n\n    var css = 'superlongword superlongword superlongword superlongword superlongword superlongword superlongword';\n\n\n## End Result:\n\n    var css = (function(){var a='superlongword';return [a,' ',a,' ',a,' ',a,' ',a,' ',a,' ',a].join('');})();\n\nWhoo hoo! We saved 5 characters! OK not much compression, but longer strings yield better results.\n\n## Usage:\n\n    var css = 'superlongword superlongword superlongword superlongword superlongword superlongword superlongword';\n    var result = smashjs(css);\n\n    console.log(result);       // logs: (function(){var a='superlongword...\n    console.log(eval(result)); // logs: superlongword superlongword supe...\n",
  "readmeFilename": "readme.md",
  "_id": "stringsmash@0.1.1",
  "_from": "stringsmash@*"
}
